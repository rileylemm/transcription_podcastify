version: "3.8"

services:
  flask:
    build:
      context: .
      dockerfile: docker/youtube_transcripts/Dockerfile
    ports:
      - "5004:5004"
    volumes:
      # Application code for development
      - ./youtube_transcripts:/app
      # Shared data directory for both services
      - ./shared/data/chroma:/app/data/chroma
      - ./shared/data/cache:/app/data/cache
      - ./shared/data/transcripts:/app/data/transcripts
      - ./shared/data/analysis:/app/data/analysis
      # Model cache persistence
      - ./shared/data/model_cache:/root/.cache/huggingface
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      # Add your API keys and other environment variables here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      # ChromaDB settings
      - CHROMA_DATA_DIR=/app/data/chroma
      # Cache settings
      - CACHE_DIR=/app/data/cache
      # Mistral settings
      - MISTRAL_API_URL=http://mistral:11434
    env_file:
      - .env
    depends_on:
      - mistral
    networks:
      - app_network

  mistral:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ./shared/data/mistral:/root/.cache/ollama
    command: ["serve"]
    networks:
      - app_network

# Define networks
networks:
  app_network:
    driver: bridge

# Define named volumes for persistent data
volumes:
  chroma_data:
    name: transcript_podcastify_chroma_data
  cache_data:
    name: transcript_podcastify_cache_data
  transcript_data:
    name: transcript_podcastify_transcript_data
  analysis_data:
    name: transcript_podcastify_analysis_data
  mistral_data:
    name: transcript_podcastify_mistral_data
